{"version":3,"file":"InlineKeyboardMarkup.js","sourceRoot":"","sources":["../../src/Builders/InlineKeyboardMarkup.ts"],"names":[],"mappings":";;;AAkBA,kDAEC;AAjBD,uCAAmC;AAEnC,MAAa,oBAAqB,SAAQ,iBAAO;IAG7C,YAAmB,GAAG,oBAA8C;QAChE,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,eAAe,EAAE,oBAAoB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;IAC/E,CAAC;IAEM,MAAM,CAAC,GAAG,qBAA6C;QAC1D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,qBAAqB,CAAC,CAAC,CAAA;IAClE,CAAC;CAEJ;AAXD,oDAWC;AAED,SAAgB,mBAAmB,CAAC,GAAG,qBAA6C;IAChF,OAAO,CAAE,GAAG,qBAAqB,CAAE,CAAA;AACvC,CAAC;AAaD,IAAiB,cAAc,CA0C9B;AA1CD,WAAiB,cAAc;IAE3B,SAAgB,GAAG;QACf,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAA;IACxB,CAAC;IAFe,kBAAG,MAElB,CAAA;IAED,SAAgB,GAAG,CAAC,GAAW;QAC3B,OAAO,EAAE,GAAG,EAAE,CAAA;IAClB,CAAC;IAFe,kBAAG,MAElB,CAAA;IAED,SAAgB,IAAI,CAAC,IAAY;QAC7B,OAAO,EAAE,IAAI,EAAE,CAAA;IACnB,CAAC;IAFe,mBAAI,OAEnB,CAAA;IAED,SAAgB,QAAQ,CAAC,SAAmB;QACxC,OAAO,EAAE,SAAS,EAAE,CAAA;IACxB,CAAC;IAFe,uBAAQ,WAEvB,CAAA;IAED,SAAgB,UAAU,CAAC,OAAmB;QAC1C,OAAO,EAAE,OAAO,EAAE,CAAA;IACtB,CAAC;IAFe,yBAAU,aAEzB,CAAA;IAED,SAAgB,YAAY,CAAC,aAAqB;QAC9C,OAAO,EAAE,aAAa,EAAE,CAAA;IAC5B,CAAC;IAFe,2BAAY,eAE3B,CAAA;IAED,SAAgB,YAAY,CAAC,aAAqB;QAC9C,OAAO,EAAE,aAAa,EAAE,CAAA;IAC5B,CAAC;IAFe,2BAAY,eAE3B,CAAA;IAED,SAAgB,iBAAiB,CAAC,mBAA2B;QACzD,OAAO,EAAE,mBAAmB,EAAE,CAAA;IAClC,CAAC;IAFe,gCAAiB,oBAEhC,CAAA;IAED,SAAgB,4BAA4B,CAAC,gCAAwC;QACjF,OAAO,EAAE,gCAAgC,EAAE,CAAA;IAC/C,CAAC;IAFe,2CAA4B,+BAE3C,CAAA;IAED,SAAgB,2BAA2B,CAAC,+BAA4D;QACpG,OAAO,EAAE,+BAA+B,EAAE,CAAA;IAC9C,CAAC;IAFe,0CAA2B,8BAE1C,CAAA;AAEL,CAAC,EA1CgB,cAAc,8BAAd,cAAc,QA0C9B","sourcesContent":["import type { LoginUrl, SwitchInlineQueryChosenChat } from '../Types/InlineQueryResult'\r\nimport type { WebAppInfo } from '../Types/InlineQuery'\r\n\r\nimport { Builder } from './Builder'\r\n\r\nexport class InlineKeyboardMarkup extends Builder {\r\n\r\n    public declare value: InlineKeyboardButton[][]\r\n    public constructor(...InlineKeyboardGroups: InlineKeyboardButton[][]){\r\n        super({ value: { inline_keyboard: InlineKeyboardGroups }, parseVal: true })\r\n    }\r\n\r\n    public addRow(...InlineKeyboardButtons: InlineKeyboardButton[]){\r\n        this.value.push(InlineKeyboardGroup(...InlineKeyboardButtons))\r\n    }\r\n\r\n}\r\n\r\nexport function InlineKeyboardGroup(...InlineKeyboardButtons: InlineKeyboardButton[]){\r\n    return [ ...InlineKeyboardButtons ]\r\n}\r\n\r\nexport type InlineKeyboardButton = typeof KeyboardButton.Pay |\r\n                                   typeof KeyboardButton.Url |\r\n                                   typeof KeyboardButton.Text |\r\n                                   typeof KeyboardButton.LoginUrl |\r\n                                   typeof KeyboardButton.WebAppInfo |\r\n                                   typeof KeyboardButton.CallbackGame |\r\n                                   typeof KeyboardButton.CallbackData |\r\n                                   typeof KeyboardButton.SwitchInlineQuery |\r\n                                   typeof KeyboardButton.SwitchInlineQueryChosenChat |\r\n                                   typeof KeyboardButton.SwitchInlineQueryCurrentChat\r\n                                   \r\nexport namespace KeyboardButton {\r\n    \r\n    export function Pay(){\r\n        return { pay: true }\r\n    }\r\n\r\n    export function Url(url: string){\r\n        return { url }\r\n    }\r\n\r\n    export function Text(text: string){\r\n        return { text }\r\n    }\r\n\r\n    export function LoginUrl(login_url: LoginUrl){\r\n        return { login_url }\r\n    }\r\n    \r\n    export function WebAppInfo(web_app: WebAppInfo){\r\n        return { web_app }\r\n    }\r\n\r\n    export function CallbackGame(callback_game: string){\r\n        return { callback_game }\r\n    }\r\n    \r\n    export function CallbackData(callback_data: string){\r\n        return { callback_data }\r\n    }\r\n\r\n    export function SwitchInlineQuery(switch_inline_query: string){\r\n        return { switch_inline_query }\r\n    }\r\n\r\n    export function SwitchInlineQueryCurrentChat(switch_inline_query_current_chat: string){\r\n        return { switch_inline_query_current_chat }\r\n    }\r\n\r\n    export function SwitchInlineQueryChosenChat(switch_inline_query_chosen_chat: SwitchInlineQueryChosenChat){\r\n        return { switch_inline_query_chosen_chat }\r\n    }\r\n\r\n}"]}